{"version":3,"sources":["components/profile/Profile.module.css","components/statistics/statistics.module.css","components/friendslist/Friendlist.module.css","app.module.css","components/profile/Stats.jsx","components/profile/Description.jsx","components/profile/Profile.jsx","components/statistics/Statistics-title.jsx","components/statistics/StatList.jsx","components/statistics/Statistics.jsx","components/friendslist/FriendListItem.jsx","components/friendslist/FriendList.jsx","components/transactions/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Stats","views","followers","likes","className","styles","stats","label","quantity","Description","name","avatar","tag","location","description","src","alt","Profile","profile","StatisticsTitle","title","titleSection","StatList","statisticList","map","data","item","percentage","id","Statistics","statistics","FriendListItem","status","isOnline","isOffline","width","FriendList","friends","friendList","friend","TransactionHistory","items","Table","striped","bordered","hover","style","backgroundColor","type","amount","currency","App","wrapper","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4EACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,iBCA5PD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,aAAe,iCAAiC,cAAgB,kCAAkC,MAAQ,0BAA0B,WAAa,+BAA+B,KAAO,2B,gBCArPD,EAAOC,QAAU,CAAC,SAAW,6BAA6B,UAAY,8BAA8B,KAAO,yBAAyB,KAAO,yBAAyB,OAAS,2BAA2B,WAAa,iC,0lGCArND,EAAOC,QAAU,CAAC,QAAU,uB,gIC2BbC,EAzBD,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACjC,OACE,qBAAIC,UAAWC,IAAOC,MAAtB,UACE,+BACE,sBAAMF,UAAWC,IAAOE,MAAxB,uBACA,sBAAMH,UAAWC,IAAOG,SAAxB,SAAmCN,OAErC,+BACE,sBAAME,UAAWC,IAAOE,MAAxB,mBACA,sBAAMH,UAAWC,IAAOG,SAAxB,SAAmCP,OAErC,+BACE,sBAAMG,UAAWC,IAAOE,MAAxB,mBACA,sBAAMH,UAAWC,IAAOG,SAAxB,SAAmCL,WCK5BM,EAlBK,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SACxC,OACE,sBAAKT,UAAWC,IAAOS,YAAvB,UACE,qBAAKC,IAAKJ,EAAQK,IAAI,gHAAsBZ,UAAWC,IAAOM,SAC9D,mBAAGP,UAAWC,IAAOK,KAArB,SAA4BA,IAC5B,mBAAGN,UAAWC,IAAOO,IAArB,SAA2BA,IAC3B,mBAAGR,UAAWC,IAAOQ,SAArB,SAAgCA,QCGvBI,EARC,SAAC,GAA8D,IAA5DP,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,IAAKC,EAAwC,EAAxCA,SAAUX,EAA8B,EAA9BA,UAAWD,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,MAChE,OACE,sBAAKC,UAAWC,IAAOa,QAAvB,UACE,cAAC,EAAD,CAAaR,KAAMA,EAAMC,OAAQA,EAAQC,IAAKA,EAAKC,SAAUA,IAC7D,cAAC,EAAD,CAAOX,UAAWA,EAAWD,MAAOA,EAAOE,MAAOA,Q,uBCOzCgB,EAZS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzB,OACE,qBAAKhB,UAAWC,IAAOgB,aAAvB,SACE,oBAAIjB,UAAWC,IAAOe,MAAtB,SAA8BA,OCoBrBE,EAvBE,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MAClB,OACE,oBAAIF,UAAWC,IAAOkB,cAAtB,SACGjB,EAAMkB,KAAI,SAAAC,GACT,OACE,qBAAIrB,UAAWC,IAAOqB,KAAtB,UACE,sBAAMtB,UAAWC,IAAOE,MAAxB,SAAgCkB,EAAKlB,QACrC,uBAAMH,UAAWC,IAAOsB,WAAxB,cAAsCF,EAAKE,WAA3C,UAF+BF,EAAKG,UCKjCC,EATI,SAAC,GAAsB,IAApBvB,EAAmB,EAAnBA,MAAOc,EAAY,EAAZA,MAC3B,OACE,0BAAShB,UAAWC,IAAOyB,WAA3B,UACE,cAAC,EAAD,CAAiBV,MAAOA,IACxB,cAAC,EAAD,CAAUd,MAAOA,Q,8BCaRyB,EAlBQ,SAAC,GAA8B,IAA5BpB,EAA2B,EAA3BA,OAAQqB,EAAmB,EAAnBA,OAAQtB,EAAW,EAAXA,KACxC,OACE,qCACE,sBACEN,WAAsB,IAAX4B,EAAkB3B,IAAO4B,SAAW5B,IAAO6B,YAExD,qBAAK9B,UAAWC,IAAOM,OAAQI,IAAKJ,EAAQK,IAAKN,EAAMyB,MAAM,OAC7D,mBAAG/B,UAAWC,IAAOK,KAArB,SAA4BA,QCiBnB0B,EAvBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,oBAAIjC,UAAWC,IAAOiC,WAAtB,SACGD,EAAQb,KAAI,SAAAe,GAAM,OACjB,oBAAInC,UAAWC,IAAOqB,KAAtB,SACE,cAAC,EAAD,CACEM,OAAQO,EAAON,SACftB,OAAQ4B,EAAO5B,OACfD,KAAM6B,EAAO7B,QAJgB6B,EAAOX,U,gBC2CjCY,G,MA9CY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5B,OAaE,cAZA,CAYCC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,uBAAOC,MAAO,CAAEC,gBAAiB,UAAjC,SACE,+BACE,sCACA,wCACA,+CAGJ,gCACGN,EAAMjB,KAAI,SAAAE,GAAI,OACb,+BACE,6BAAKA,EAAKsB,OACV,6BAAKtB,EAAKuB,SACV,6BAAKvB,EAAKwB,aAHHxB,EAAKE,c,iBCKTuB,MAnBf,WACE,OACE,sBAAK/C,UAAWC,IAAO+C,QAAvB,UACE,cAAC,EAAD,CACE1C,KAAM2C,EAAK3C,KACXE,IAAKyC,EAAKzC,IACVC,SAAUwC,EAAKxC,SACfF,OAAQ0C,EAAK1C,OACbT,UAAWmD,EAAK/C,MAAMJ,UACtBD,MAAOoD,EAAK/C,MAAML,MAClBE,MAAOkD,EAAK/C,MAAMH,QAEpB,cAAC,EAAD,CAAYiB,MAAM,eAAed,MAAOgD,IACxC,cAAC,EAAD,CAAYjB,QAASA,IAXvB,IAYE,cAAC,EAAD,CAAoBI,MAAOc,IAZ7B,QCLWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6044178d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__JvB3l\",\"avatar\":\"Profile_avatar__3Eo-R\",\"name\":\"Profile_name__2yxME\",\"tag\":\"Profile_tag__PZa2R\",\"location\":\"Profile_location__3paRs\",\"stats\":\"Profile_stats__1nngp\",\"label\":\"Profile_label__2O9HA\",\"quantity\":\"Profile_quantity__1SZdW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__1YMpS\",\"titleSection\":\"statistics_titleSection__MYRSl\",\"statisticList\":\"statistics_statisticList__3aX_z\",\"label\":\"statistics_label__35Dri\",\"percentage\":\"statistics_percentage__wfjej\",\"item\":\"statistics_item__XapHd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isOnline\":\"Friendlist_isOnline__1Y3hO\",\"isOffline\":\"Friendlist_isOffline__Sc-DX\",\"item\":\"Friendlist_item__2kZW-\",\"name\":\"Friendlist_name__3YOl-\",\"avatar\":\"Friendlist_avatar__3l5oq\",\"friendList\":\"Friendlist_friendList__3YP1V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app_wrapper__2xDUG\"};","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Stats = ({ views, followers, likes }) => {\n  return (\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{likes}</span>\n      </li>\n    </ul>\n  );\n};\n\nStats.propTypes = {\n  followers: PropTypes.number,\n  views: PropTypes.number,\n  likes: PropTypes.number,\n};\n\nexport default Stats;\n","import PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Description = ({ name, avatar, tag, location }) => {\n  return (\n    <div className={styles.description}>\n      <img src={avatar} alt=\"Аватар пользователя\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n  );\n};\n\nDescription.propTypes = {\n  imgUrl: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n};\n\nexport default Description;\n","import Stats from './Stats';\nimport Description from './Description';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ name, avatar, tag, location, followers, views, likes }) => {\n  return (\n    <div className={styles.profile}>\n      <Description name={name} avatar={avatar} tag={tag} location={location} />\n      <Stats followers={followers} views={views} likes={likes} />\n    </div>\n  );\n};\nexport default Profile;\n","import PropTypes from 'prop-types';\r\nimport styles from './statistics.module.css';\r\n\r\nconst StatisticsTitle = ({ title }) => {\r\n  return (\r\n    <div className={styles.titleSection}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatisticsTitle.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default StatisticsTitle;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './statistics.module.css';\r\n\r\nconst StatList = ({ stats }) => {\r\n  return (\r\n    <ul className={styles.statisticList}>\r\n      {stats.map(data => {\r\n        return (\r\n          <li className={styles.item} key={data.id}>\r\n            <span className={styles.label}>{data.label}</span>\r\n            <span className={styles.percentage}> {data.percentage}% </span>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nStatList.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default StatList;\r\n","import StatisticsTitle from './Statistics-title';\r\nimport StatList from './StatList';\r\nimport styles from './statistics.module.css';\r\n\r\nconst Statistics = ({ stats, title }) => {\r\n  return (\r\n    <section className={styles.statistics}>\r\n      <StatisticsTitle title={title} />\r\n      <StatList stats={stats} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Friendlist.module.css';\r\n\r\nconst FriendListItem = ({ avatar, status, name }) => {\r\n  return (\r\n    <>\r\n      <span\r\n        className={status === true ? styles.isOnline : styles.isOffline}\r\n      ></span>\r\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={styles.name}>{name}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  status: PropTypes.bool.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import FriendListItem from './FriendListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Friendlist.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friendList}>\r\n      {friends.map(friend => (\r\n        <li className={styles.item} key={friend.id}>\r\n          <FriendListItem\r\n            status={friend.isOnline}\r\n            avatar={friend.avatar}\r\n            name={friend.name}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friend: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    // <table class=\"transaction-history\">\r\n\r\n    //   <tbody>\r\n    //     {items.map(item => (\r\n    //       <tr key={item.id}>\r\n    //         <td>{item.type}</td>\r\n    //         <td>{item.amount}</td>\r\n    //         <td>{item.currency}</td>\r\n    //       </tr>\r\n    //     ))}\r\n    //   </tbody>\r\n    // </table>\r\n    <Table striped bordered hover>\r\n      <thead style={{ backgroundColor: 'salmon' }}>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map(item => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","// import logo from './logo.svg';\nimport Profile from './components/profile/Profile';\nimport user from './components/profile/user.json';\n\nimport Statistics from './components/statistics/Statistics';\nimport statisticalData from './components/statistics/statistical-data.json';\n\nimport friends from './components/friendslist/friends.json';\nimport FriendList from './components/friendslist/FriendList';\n\nimport transactions from './components/transactions/transactions.json';\nimport TransactionHistory from './components/transactions/TransactionHistory';\n\nimport styles from './app.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.wrapper}>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />,\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}